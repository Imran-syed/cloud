<?xml version="1.0" encoding="UTF-8"?>
<project default="info" name="Build for Business Obj">
	<!-- author: Denis Gefter -->
	<!-- Properties to set the Relative Paths -->
	<property name="local.home" value="../local"/>
	<property file="${local.home}/local.properties"/>
	<target name="initProps">
		<property name="classes" value="classes"/>
		<property name="src" value="."/>
		<property name="test" value="test"/>
		<property name="build" value="build"/>
	</target>
	<patternset id="jar.resources">
		<include name="*.jar"/>
	</patternset>
	<!-- Sets the Classpath for the application - includes the resources from the Pattern Set -->
	<path id="base.path">
		<pathelement path="${classpath}"/>
		<fileset dir="${lib.home}">
			<patternset refid="jar.resources"/>
		</fileset>
	</path>
	<!-- Default Info Target -->
	<target name="info">
		<echo message="Please use ant help to display targets."/>
	</target>
	<!-- Help Target-->
	<target name="help">
		<echo message=""/>
		<echo message="Build assumes that you have the local.properties file configured properly"/>
		<echo message="Build targets for the sm tests"/>
		<echo message="The following targets are available:"/>
		<echo message="--------------------------------"/>
		<echo message="compile      -> runs javac on sm test code"/>
		<echo message="clean        -> cleans sm test directory"/>
		<echo message="run          -> runs sm tests"/>
		<echo message="run-all      -> runs all junit tests that starts with Test*"/>
	</target>
	<!-- Initializes the Properties for the files -->
	<target name="initialize" depends="initProps">
		<property name="local_build" value="${build.home}/${test}"/>
	</target>
	<!-- Cleans sm   -->
	<target name="clean" depends="initialize">
		<delete dir="${build.home}/${test}"/>
	</target>
	<!-- Create the Directory Structure to be used by the Compile -->
	<target name="prepare" depends="initialize">
		<!-- Create the time stamp -->
		<tstamp/>
		<mkdir dir="${build.home}/${test}/${classes}"/>
	</target>
	<!-- Compile the java code for sm tests-->
	<target name="compile" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/*.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="JUNIT">
		<available property="junit.present" classname="junit.framework.TestCase"/>
	</target>
	<!-- AspectJ Compiler Ant Task -->
	<taskdef name="ajc" classname="org.aspectj.tools.ant.taskdefs.Ajc">
		<!-- declare classes needed to run the tasks and tools -->
		<classpath>
			<pathelement location="${lib.home}/aspectj-ant.jar"/>
			<pathelement location="${lib.home}/aspectjtools.jar"/>
		</classpath>
	</taskdef>
	<!-- Compiles Java Code with Aspects for SM -->
	<target name="aspects" depends="prepare">
		<echo message="Please, make sure that you copy aspectjtools.jar to the lib directory"/>
		<ajc preprocess="false" workingdir="${build.home}/tmp" destdir="${build.home}/classes" argfiles="aspects.lst">
			<!-- declare classes needed to compile the target files -->
			<classpath>
				<pathelement location="${lib.home}/junit.jar"/>
				<pathelement location="${lib.home}/jakarta-poi.jar"/>
				<pathelement location="${lib.home}/aspectjrt.jar"/>
				<pathelement path="${build.home}/classes"/>
			</classpath>
		</ajc>
	</target>
	<!-- Runs AspectJ Preprocessor Only.  Pure Java Source Generated in WORKINGDIR -->
	<target name="aspects-debug" depends="prepare">
		<echo message="Please, make sure that you copy aspectjtools.jar to the lib directory"/>
		<ajc preprocess="true" workingdir="${build.home}/tmp" destdir="${build.home}/classes" argfiles="aspects.lst">
			<!-- declare classes needed to compile the target files -->
			<classpath>
				<pathelement location="${lib.home}/aspectjrt.jar"/>
				<pathelement path="${build.home}/classes"/>
			</classpath>
		</ajc>
		<echo message="AspectJ Compiler Output is in the build/tmp directory"/>
	</target>
	<target name="run-all" depends="compile">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team1" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/*Test*Team1.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team1-debug" depends="compile-team1">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/Test*Team1.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team1" depends="compile-team1">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/Test*Team1.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team2" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/SMTestPerformance.java,**/TestSM_team2.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team2" depends="compile-team2">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit fork="yes" maxmemory="512M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/SMTestPerformance.class"/>
					<include name="**/TestSM_team2.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team2-debug" depends="compile-team2">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit fork="yes" maxmemory="512M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/SMTestPerformance.class"/>
					<include name="**/TestSM_team2.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team3" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/*TestTeam3*.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team3" depends="compile-team3">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit fork="yes" maxmemory="256M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam3*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team3-debug" depends="compile-team3">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit fork="yes" maxmemory="256M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam3*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team4" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/SMTestCapacity.java,**/SMTestCapacityReuse.java,**/SMTestCapacityUpdate.java,**/SMTestDelete.java,**/SMTestExtreme1.java,**/SMTestExtreme2.java,**/SMTestFetch.java,**/SMTestLargeRecord.java,**/SMTestStore.java,**/SMTestUpdate.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team4" depends="compile-team4">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="512M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<!--include name="**/SMTestLargeRecord.class"/-->
					<include name="**/SMTestCapacity.class"/>
					<include name="**/SMTestCapacityReuse.class"/>
					<include name="**/SMTestCapacityUpdate.class"/>
					<include name="**/SMTestDelete.class"/>
					<include name="**/SMTestExtreme1.class"/>
					<!--include name="**/SMTestExtreme2.class"/-->
					<include name="**/SMTestFetch.class"/>
					<include name="**/SMTestStore.class"/>
					<include name="**/SMTestUpdate.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team4-debug" depends="compile-team4">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="512M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<!--include name="**/SMTestLargeRecord.class"/-->
					<include name="**/SMTestCapacity.class"/>
					<include name="**/SMTestCapacityReuse.class"/>
					<include name="**/SMTestCapacityUpdate.class"/>
					<include name="**/SMTestDelete.class"/>
					<include name="**/SMTestExtreme1.class"/>
					<!--include name="**/SMTestExtreme2.class"/-->
					<include name="**/SMTestFetch.class"/>
					<include name="**/SMTestStore.class"/>
					<include name="**/SMTestUpdate.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team4-large" depends="compile-team4">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="512M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/SMTestLargeRecord.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>	
	<target name="run-team4-large-debug" depends="compile-team4">
		<java fork="yes" maxmemory="512M" classname="junit.textui.TestRunner" taskname="junit" failonerror="true">
			<arg value="edu.sjsu.cs.db.sm.SMTestLargeRecord"/>
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</java>
	</target>
	<target name="compile-team5" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/TestSM_5*.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team5" depends="compile-team5">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="512M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/TestSM_5.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team7" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/*TestTeam7*.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team7" depends="compile-team7">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam7*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team7-debug" depends="compile-team7">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam7*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="compile-team8" depends="prepare">
		<javac srcdir="${dev.home}/test" includes="**/*TestTeam8*.java" destdir="${build.home}/${test}/${classes}" debug="${build.prop.debug}" optimize="${build.prop.optimize}" deprecation="${build.prop.deprecation}">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
		</javac>
	</target>
	<target name="run-team8" depends="compile-team8">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="no">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam8*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
	<target name="run-team8-debug" depends="compile-team8">
		<echo message="Please, make sure that you copied junit.jar to you ant/lib directory "/>
		<junit maxmemory="256M" printsummary="on" showoutput="yes">
			<classpath>
				<pathelement path="${classpath}"/>
				<pathelement path="${build.home}/${test}/${classes}"/>
				<pathelement path="${build.home}/${classes}"/>
				<fileset dir="${lib.home}">
					<patternset refid="jar.resources"/>
				</fileset>
			</classpath>
			<batchtest todir="${build.home}/${test}/${classes}">
				<fileset dir="${build.home}/${test}/${classes}">
					<include name="**/*TestTeam8*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>
</project>
